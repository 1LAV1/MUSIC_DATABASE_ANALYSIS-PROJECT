1. Who is the senior most employee based on job title?
2. Which countries have the most Invoices?
3. What are top 3 values of total invoice?
4. Which city has the best customers? We would like to throw a promotional Music
Festival in the city we made the most money. Write a query that returns one city that
has the highest sum of invoice totals. Return both the city name & sum of all invoice
totals
5. Who is the best customer? The customer who has spent the most money will be
declared the best customer. Write a query that returns the person who has spent the
most money



aswers-: 
1> 
select * from employee
order by levels desc
limit 1

2> 
select billing_country , count(*) as count from invoice
group by billing_country
order by count desc


3>
select total from invoice
order by total desc
limit 3


4> 
select sum(total) as total , billing_city as city_names  
from invoice
group by city_names 
order by total
limit 1

5> 
select customer.customer_id, customer.first_name , customer.last_name ,sum(invoice.total) as total 
from customer 
join invoice on customer.customer_id = invoice.customer_id
group by customer.customer_id
order by total desc
limit 1




1. Write query to return the email, first name, last name, & Genre of all Rock Music
listeners. Return your list ordered alphabetically by email starting with A

2. Let's invite the artists who have written the most rock music in our dataset. Write a
query that returns the Artist name and total track count of the top 10 rock bands

3. Return all the track names that have a song length longer than the average song length.
Return the Name and Milliseconds for each track. Order by the song length with the
longest songs listed first


answers-:
1> 
select distinct email , first_name , last_name
from customer
join invoice on invoice.customer_id = customer.customer_id
join invoice_line on invoice_line.invoice_id = invoice.invoice_id

where track_id in (
	select track_id from track 
	join genre on track.genre_id = genre.genre_id
	where genre.name like 'Rock'
)
order  by email 


2> 
select artist.artist_id , artist.name , count(artist.artist_id) as no_of_songs
from track
join album on album.album_id = track.album_id
join artist on album.artist_id = artist.artist_id
join genre on genre.genre_id = track.genre_id 
where genre.name like 'Rock'
	group by artist.artist_id
order by  no_of_songs desc 
limit 10


3>
select name , milliseconds
	from track
	where milliseconds >(
	select avg(milliseconds)
	from track) 
order by milliseconds desc


